name: Deploy Frontend to S3 + CloudFront

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

# Prevent overlapping deploys on rapid pushes
concurrency:
  group: deploy-frontend
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read

env:
  # Use repo Variables for these (Settings → Secrets and variables → Actions → Variables)
  AWS_REGION: ${{ vars.AWS_REGION }}                # e.g., us-east-2
  S3_BUCKET: ${{ vars.S3_BUCKET }}                  # e.g., genaichatbot.click
  CF_DIST_ID: ${{ vars.CLOUDFRONT_DISTRIBUTION_ID }} # e.g., E123ABC...
  APP_DIR: genaichatbot-frontend                    # <— your app folder
  BUILD_DIR: genaichatbot-frontend/dist             # <— build output

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: ${{ env.APP_DIR }}/package-lock.json

      - name: Install deps
        working-directory: ${{ env.APP_DIR }}
        run: npm ci

      - name: Build
        working-directory: ${{ env.APP_DIR }}
        run: npm run build
        # If you use Vite and a subpath, ensure vite.config.js has: base: "/"

      # Keyless AWS auth via GitHub OIDC
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      # Optional: show what's in the build folder if debugging
      # - run: ls -la $BUILD_DIR

      # Long-cache immutable assets (everything except index.html)
      - name: Upload assets (immutable)
        run: |
          aws s3 sync "$BUILD_DIR" "s3://${S3_BUCKET}/" \
            --exclude "index.html" \
            --cache-control "public,max-age=31536000,immutable" \
            --delete

      # No-cache HTML entry to pick up new bundles immediately
      - name: Upload index.html (no-cache)
        run: |
          aws s3 cp "$BUILD_DIR/index.html" "s3://${S3_BUCKET}/index.html" \
            --cache-control "no-store" \
            --content-type "text/html; charset=utf-8"

      - name: Invalidate CloudFront
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "${CF_DIST_ID}" \
            --paths "/*"
